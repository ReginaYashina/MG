@mixin anim($time, $delay) {
	-webkit-transition: all $time ease $delay;
	-moz-transition: all $time ease $delay;
	-ms-transition: all $time ease $delay;
	-o-transition: all $time ease $delay;
	transition: all $time ease $delay;
}
@mixin anim_cubic($time, $delay) {
	-webkit-transition: all $time cubic-bezier(0.68, -0.55, 0.265, 1.55) $delay;
	-moz-transition: all $time cubic-bezier(0.68, -0.55, 0.265, 1.55) $delay;
	-ms-transition: all $time cubic-bezier(0.68, -0.55, 0.265, 1.55) $delay;
	-o-transition: all $time cubic-bezier(0.68, -0.55, 0.265, 1.55) $delay;
	transition: all $time cubic-bezier(0.68, -0.55, 0.265, 1.55) $delay;
}
@mixin animate($name, $time, $infinite, $type) {
	-webkit-animation: $name $time + s $infinite $type;
	-moz-animation: $name $time + s $infinite $type;
	-o-animation: $name $time + s $infinite $type;
	animation: $name $time + s $infinite $type;
}
@mixin rotate($deg) {
	-moz-transform: rotate($deg);
	-ms-transform: rotate($deg);
	-webkit-transform: rotate($deg);
	-o-transform: rotate($deg);
	transform: rotate($deg);
}
@mixin scale($num) {
	-moz-transform: scale($num);
	-ms-transform: scale($num);
	-webkit-transform: scale($num);
	-o-transform: scale($num);
	transform: scale($num);
}
@mixin skew($num) {
	-webkit-transform: skewX($num);
	-moz-transform: skewX($num);
	-ms-transform: skewX($num);
	-o-transform: skewX($num);
	transform: skewX($num);
}
@mixin cnt($h) {
	display: flex;
	flex-direction: column;
	height: $h;
	text-align: center;
	align-items: stretch;
	justify-content: center;
}
@mixin tr($x, $y, $z) {
	transform: translate3d($x, $y, $z);
	-webkit-transform: translate3d($x, $y, $z);
	-ms-transform: translate3d($x, $y, $z);
	-o-transform: translate3d($x, $y, $z);
	-moz-transform: translate3d($x, $y, $z);
}
@mixin flexbox() {
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
	font-size: 0;
}
@mixin flexboxinline() {
	display: -webkit-inline-flex;
	display: -moz-inline-flex;
	display: -ms-inline-flex;
	display: -o-inline-flex;
	display: inline-flex;
}
@mixin flexorder($val) {
	-webkit-box-ordinal-group: $val;
	-moz-box-ordinal-group: $val;
	-ms-flex-order: $val;
	-webkit-order: $val;
	order: $val;
}

@function strip-unit($number) {
	@if type-of($number) == "number" and not unitless($number) {
		@return $number / ($number * 0 + 1);
	}

	@return $number;
}

@function calcFluidFontSize($f-min, $f-max, $w-min, $w-max, $units: px) {
	$f-min: strip-unit($f-min);
	$f-max: strip-unit($f-max);
	$w-min: strip-unit($w-min);
	$w-max: strip-unit($w-max);

	$k: ($f-max - $f-min)/ ($w-max - $w-min);
	$b: $f-min - $k * $w-min;

	$b: $b + $units;

	@return calc(#{$k} * 100vw + #{$b});
}

@mixin fluidFontSize($f-min, $f-max, $w-min, $w-max, $fallback: false) {
	font-size: $f-min;

	@media (min-width: $w-min) {
		@if ($fallback) {
			font-size: $fallback;
		}
		font-size: calcFluidFontSize($f-min, $f-max, $w-min, $w-max, px);
	}
	@media (min-width: $w-max) {
		font-size: $f-max;
	}
}

.fluid-font-size {
	@include fluidFontSize(16px, 24px, 480px, 1280px, 18px);
}
